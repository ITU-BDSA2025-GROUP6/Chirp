name: Release Executables
on:
  push:
    branches: [main]
    tags: ['v*']
  create: {}                       # catches tag creation from the UI
  release:
    types: [published]             # optional, still okay

permissions:
  contents: write

jobs:
  release:
    # run only when it's a release OR a tag push v* OR a created tag that starts with v
    if: >
      github.event_name == 'release' ||
      (github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')) ||
      (github.event_name == 'create' && github.event.ref_type == 'tag' && startsWith(github.event.ref, 'v'))
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v5

      - name: Setup .NET 8
        uses: actions/setup-dotnet@v5
        with:
          dotnet-version: 8.x
          cache: false   # important: avoid the lockfile error

      - name: Restore
        run: dotnet restore
      - name: Build
        run: dotnet build -c Release --no-restore
      - name: Test
        run: dotnet test -c Release --no-build

      - name: Publish single-file (linux/win/mac) and zip
        shell: bash
        run: |
          set -euo pipefail
          tag="${{ github.event_name == 'release' && github.event.release.tag_name || (github.event_name == 'create' && github.event.ref || github.ref_name) }}"
          project="src/Chirp.Web/Chirp.Web.csproj"
          app="Chirp-Web"
          rids=(linux-x64 win-x64 osx-x64)   # add osx-arm64 if desired

          mkdir -p out
          for rid in "${rids[@]}"; do
            outdir="${app}-${tag}-${rid}"
            mac_sign=""
            [[ "$rid" == osx-* ]] && mac_sign="-p:EnableMacOSCodeSign=false"

            dotnet publish "$project" -c Release \
              --framework net8.0 \
              --runtime "$rid" \
              --self-contained false \
              -p:PublishSingleFile=true \
              -p:PublishTrimmed=false \
              -p:DebugType=none -p:DebugSymbols=false \
              $mac_sign \
              -o "$outdir"

            zip -r "out/${outdir}.zip" "$outdir"
            rm -rf "$outdir"
          done

      - name: Create GitHub Release and upload assets
        uses: softprops/action-gh-release@v2
        if: github.event_name != 'release'  # if it's already a Release event, the release exists
        with:
          name: "Chirp ${{ github.event_name == 'create' && github.event.ref || github.ref_name }}"
          generate_release_notes: true
          files: out/*.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload assets to existing release (when event is release)
        uses: softprops/action-gh-release@v2
        if: github.event_name == 'release'
        with:
          name: "Chirp ${{ github.event.release.tag_name }}"
          generate_release_notes: true
          files: out/*.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
